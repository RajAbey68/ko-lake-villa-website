// File: client/src/components/GalleryModal.tsx

import React, { useEffect } from 'react';
import { Dialog } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { ChevronLeft, ChevronRight, X } from 'lucide-react';

interface ImageItem {
  id: string;
  imageUrl: string;
  title: string;
  category: string;
  description: string;
  tags: string[];
}

interface GalleryModalProps {
  images: ImageItem[];
  isOpen: boolean;
  currentIndex: number;
  onClose: () => void;
  onNavigate: (direction: 'prev' | 'next') => void;
}

export const GalleryModal: React.FC<GalleryModalProps> = ({
  images,
  isOpen,
  currentIndex,
  onClose,
  onNavigate,
}) => {
  const image = images[currentIndex];

  useEffect(() => {
    const handleKey = (e: KeyboardEvent) => {
      if (e.key === 'ArrowLeft') onNavigate('prev');
      if (e.key === 'ArrowRight') onNavigate('next');
      if (e.key === 'Escape') onClose();
    };
    window.addEventListener('keydown', handleKey);
    return () => window.removeEventListener('keydown', handleKey);
  }, [onNavigate, onClose]);

  if (!image) return null;

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <div className="fixed inset-0 z-50 bg-black/80 flex items-center justify-center">
        <div className="relative w-[90%] max-w-5xl max-h-[90vh] bg-white rounded-xl overflow-hidden shadow-xl">
          <img
            src={image.imageUrl}
            alt={image.title}
            className="object-contain w-full h-[60vh] bg-black"
          />
          <div className="p-4 space-y-1">
            <h2 className="text-xl font-semibold">{image.title}</h2>
            <p className="text-sm text-muted-foreground">Category: {image.category}</p>
            <p className="text-sm text-gray-700">{image.description}</p>
            <div className="text-xs text-blue-500 space-x-2">
              {image.tags.map((tag, i) => (
                <span key={i}>#{tag}</span>
              ))}
            </div>
          </div>

          <Button
            variant="ghost"
            className="absolute top-4 right-4"
            onClick={onClose}
          >
            <X className="w-5 h-5" />
          </Button>

          <Button
            variant="ghost"
            className="absolute left-2 top-1/2 -translate-y-1/2"
            onClick={() => onNavigate('prev')}
          >
            <ChevronLeft className="w-6 h-6" />
          </Button>

          <Button
            variant="ghost"
            className="absolute right-2 top-1/2 -translate-y-1/2"
            onClick={() => onNavigate('next')}
          >
            <ChevronRight className="w-6 h-6" />
          </Button>
        </div>
      </div>
    </Dialog>
  );
};