name: Protect Feature Deletions
on:
  pull_request:
    branches: [ main, GuestyPro, fix/**, feat/** ]
jobs:
  guard:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Detect deletions in critical paths
        id: diff
        run: |
          base="${{ github.event.pull_request.base.sha }}"
          head="${{ github.event.pull_request.head.sha }}"
          echo "Base: $base"
          echo "Head: $head"
          git diff --name-status "$base" "$head" | tee diff.txt
          dels=$(git diff --name-status "$base" "$head" | awk '$1=="D" && ($2 ~ /^app\/|^components\//){print $2}')
          if [ -n "$dels" ]; then
            echo "deleted=$dels" >> $GITHUB_OUTPUT
          fi
      - name: Enforce approval label or commit token
        if: steps.diff.outputs.deleted != ''
        run: |
          echo "Deletions detected:"
          echo "${{ steps.diff.outputs.deleted }}"
          label_ok=$(jq -r '.pull_request.labels[].name' <<< '${{ toJson(github.event) }}' | grep -i '^approved-removal$' || true)
          token_ok=$(git log -1 --pretty=%B | grep -F 'APPROVED-REMOVAL' || true)
          if [ -z "$label_ok" ] && [ -z "$token_ok" ]; then
            echo "::error::Critical files deleted without approval. Add PR label 'approved-removal' or include 'APPROVED-REMOVAL' in the commit message."
            exit 1
          else
            echo "Approval satisfied."
          fi