name: Pre-Deployment Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  pre-deployment-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build check
      run: npm run build
      
    - name: 🔍 TypeScript check
      run: npx tsc --noEmit
      
    - name: 🚀 Run pre-deployment tests
      run: npm run test:predeployment
      
    - name: 🎭 Run visual regression tests
      run: npm run test:visual
      
    - name: 📊 Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-${{ matrix.node-version }}
        path: |
          pre-deployment-report.json
          tests/visual-regression.spec.js
        retention-days: 30
        
  integration-tests:
    runs-on: ubuntu-latest
    needs: pre-deployment-tests
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🎭 Install Playwright
      run: |
        npm install -D @playwright/test
        npx playwright install --with-deps
        
    - name: 🔗 Run integration tests
      run: npm run test:integration
      
    - name: 📊 Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
  deployment-readiness:
    runs-on: ubuntu-latest
    needs: [pre-deployment-tests, integration-tests]
    if: always()
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🎯 Final deployment readiness check
      run: npm run test:quick
      
    - name: ✅ Deployment Status
      run: |
        echo "🎉 Ko Lake Villa is ready for deployment!"
        echo "✅ All critical tests passed"
        echo "✅ Build successful"
        echo "✅ No regression issues detected"
        echo ""
        echo "📋 Manual testing checklist: tests/manual-test-checklist.md"
        echo "📊 Test documentation: tests/README.md" 